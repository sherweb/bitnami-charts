apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "airflow.fullname" . }}-web
  labels:
    app.kubernetes.io/name: {{ include "airflow.name" . }}
    helm.sh/chart: {{ include "airflow.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/component: web
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "airflow.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
      app.kubernetes.io/component: web
  replicas: {{ .Values.replicaCount }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "airflow.name" . }}
        helm.sh/chart: {{ include "airflow.chart" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/component: web
    {{- if .Values.podAnnotations }}
      annotations:
      {{ toYaml .Values.podAnnotations | nindent 8 }}
    {{- end }}
    spec:
      {{- include "airflow.imagePullSecrets" . | nindent 6 }}
      {{- if .Values.securityContext.enabled }}
      securityContext:
        fsGroup: {{ .Values.securityContext.fsGroup }}
        runAsUser: {{ .Values.securityContext.runAsUser }}
      {{- end }}
      {{- if .Values.nodeSelector }}
      nodeSelector: {{- toYaml .Values.nodeSelector | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
      {{ toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
      {{ toYaml . | nindent 8 }}
      {{- end }}
      {{- if or .Values.airflow.cloneDagFilesFromGit.enabled .Values.airflow.clonePluginsFromGit.enabled }}
      initContainers:
        - name: git-clone-repository
          image: "{{ template "git.image" . }}"
          imagePullPolicy: {{ .Values.git.pullPolicy | quote }}
          command:
            - /bin/bash
            - -ec
            - |
              {{- if .Values.airflow.cloneDagFilesFromGit.enabled }}
                git clone {{ .Values.airflow.cloneDagFilesFromGit.repository }} --branch {{ .Values.airflow.cloneDagFilesFromGit.branch }} /dags
              {{- end }}
              {{- if .Values.airflow.clonePluginsFromGit.enabled }}
                git clone {{ .Values.airflow.clonePluginsFromGit.repository }} --branch {{ .Values.airflow.clonePluginsFromGit.branch }} /plugins
              {{- end }}
          volumeMounts:
            {{- if .Values.airflow.cloneDagFilesFromGit.enabled }}
            - name: git-cloned-dag-files
              mountPath: /dags
            {{- end }}
            {{- if .Values.airflow.clonePluginsFromGit.enabled }}
            - name: git-cloned-plugins
              mountPath: /plugins
            {{- end }}
      containers:
        - name: git-repo-syncer
          image: "{{ template "git.image" . }}"
          imagePullPolicy: {{ .Values.git.pullPolicy | quote }}
          command:
            - /bin/bash
            - -ec
            - |
              while true; do
                  {{- if .Values.airflow.cloneDagFilesFromGit.enabled }}
                  cd /dags && git pull origin {{ .Values.airflow.cloneDagFilesFromGit.branch }}
                  {{- end }}
                  {{- if .Values.airflow.clonePluginsFromGit.enabled }}
                  cd /plugins && git pull origin {{ .Values.airflow.clonePluginsFromGit.branch }}
                  {{- end }}
                  sleep {{ default "60" .Values.airflow.gitSyncInterval }}
              done
          volumeMounts:
            {{- if .Values.airflow.cloneDagFilesFromGit.enabled }}
            - name: git-cloned-dag-files
              mountPath: /dags
            {{- end }}
            {{- if .Values.airflow.clonePluginsFromGit.enabled }}
            - name: git-cloned-plugins
              mountPath: /plugins
            {{- end }}
      {{- else }}
      containers:
      {{- end }}
        - name: airflow-web
          image: {{ template "airflow.image" . }}
          imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
          env:
            {{- if .Values.image.debug }}
            - name: BASH_DEBUG
              value: "1"
            - name: NAMI_DEBUG
              value: "1"
            - name: NAMI_LOG_LEVEL
              value: "trace8"
            {{- end }}
            - name: AIRFLOW_DATABASE_NAME
              {{- if .Values.postgresql.enabled }}
              value: {{ .Values.postgresql.postgresqlDatabase }}
              {{- else }}
              value: {{ .Values.externalDatabase.database | quote }}
              {{- end }}
            - name: AIRFLOW_DATABASE_USERNAME
              {{- if .Values.postgresql.enabled }}
              value: {{ .Values.postgresql.postgresqlUsername }}
              {{- else }}
              value: {{ .Values.externalDatabase.user | quote }}
              {{- end }}
            - name: AIRFLOW_DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ template "airflow.postgresql.secretName" . }}
                  key: postgresql-password
            - name: AIRFLOW_DATABASE_HOST
              {{- if .Values.postgresql.enabled }}
              value: {{ template "airflow.postgresql.fullname" . }}
              {{- else }}
              value: {{ .Values.externalDatabase.host | quote }}
              {{- end }}
            - name: AIRFLOW_DATABASE_PORT_NUMBER
              {{- if .Values.postgresql.enabled }}
              value: "5432"
              {{- else }}
              value: {{ .Values.externalDatabase.port | quote }}
              {{- end }}
            - name: REDIS_HOST
              {{- if .Values.redis.enabled }}
              value: {{ template "airflow.redis.fullname" . }}
              {{- else }}
              value: {{ .Values.externalRedis.host | quote }}
              {{- end }}
            - name: REDIS_PORT_NUMBER
              {{- if .Values.redis.enabled }}
              value: "6379"
              {{- else }}
              value: {{ .Values.externalRedis.port | quote }}
              {{- end }}
            {{- if and (not .Values.redis.enabled) .Values.externalRedis.username }}
            - name: REDIS_USER
              value: {{ .Values.externalRedis.username | quote }}
            {{- end }}
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ template "airflow.redis.secretName" . }}
                  key: redis-password
            - name: AIRFLOW_EXECUTOR
              value: "CeleryExecutor"
            - name: AIRFLOW_USERNAME
              value: {{ .Values.airflow.auth.username }}
            - name: AIRFLOW_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ if .Values.airflow.auth.existingSecret }}{{ .Values.airflow.auth.existingSecret }}{{ else }}{{ template "airflow.fullname" . }}{{ end }}
                  key: airflow-password
            - name: AIRFLOW_FERNET_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ if .Values.airflow.auth.existingSecret }}{{ .Values.airflow.auth.existingSecret }}{{ else }}{{ template "airflow.fullname" . }}{{ end }}
                  key: airflow-fernetKey
            - name: AIRFLOW_WEBSERVER_HOST
              value: {{ template "airflow.fullname" . }}
              {{- if .Values.airflow.baseUrl }}
            - name: AIRFLOW_BASE_URL
              value: {{ .Values.airflow.baseUrl }}
              {{- end }}
            - name: AIRFLOW_LOAD_EXAMPLES
              {{- if .Values.airflow.loadExamples }}
              value: "yes"
              {{- else }}
              value: "no"
              {{- end }}
              {{- if .Values.ldap.enabled }}
            - name: AIRFLOW_LDAP_ENABLE
              value: "yes"
            - name: AIRFLOW_LDAP_URI
              value: {{ .Values.ldap.uri }}
            - name: AIRFLOW_LDAP_SEARCH
              value: {{ .Values.ldap.base }}
            - name: AIRFLOW_LDAP_BIND_USER
              value: {{ .Values.ldap.binddn }}
            - name: AIRFLOW_LDAP_BIND_PASSWORD
              value: {{ .Values.ldap.bindpw }}
              valueFrom:
                secretKeyRef:
                  name: {{ include "airflow.ldapSecretName" . }}
                  key: bind-password
            - name: AIRFLOW_LDAP_UID_FIELD
              value: {{ .Values.ldap.uidField }}
              {{- if .Values.ldap.tls.enabled }}
            - name: AIRFLOW_LDAP_USE_TLS
              value: "yes"
            - name: AIRFLOW_LDAP_ALLOW_SELF_SIGNED
              value: {{ .Values.ldap.tls.allowSelfSigned }}
            - name: AIRFLOW_LDAP_TLS_CA_CERTIFICATE
              value: {{ include "airflow.ldapCAFilename" . | quote }}
              {{- end }}
            {{- end }}
            {{- if .Values.airflow.extraEnvVars }}
              {{- toYaml .Values.airflow.extraEnvVars | nindent 12 }}
            {{- end }}
          ports:
            - name: http
              containerPort: 8080
        {{- if .Values.livenessProbe.enabled }}
          livenessProbe:
          {{- if .Values.airflow.baseUrl }}
            tcpSocket:
              port: http
          {{- else }}
            httpGet:
              path: /health
              port: http
          {{- end }}
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.livenessProbe.successThreshold }}
            failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
        {{- end }}
        {{- if .Values.readinessProbe.enabled }}
          readinessProbe:
          {{- if .Values.airflow.baseUrl }}
            tcpSocket:
              port: http
          {{- else }}
            httpGet:
              path: /health
              port: http
          {{- end }}
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.readinessProbe.successThreshold }}
            failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
        {{- end }}
          volumeMounts:
            {{- if .Files.Glob "files/dags/*.py" }}
            - name: local-dag-files
              mountPath: /opt/bitnami/airflow/dags/local
            {{- end }}
            {{- if .Values.airflow.dagsConfigMap }}
            - name: external-dag-files
              mountPath: /opt/bitnami/airflow/dags/external
            {{- end }}
            {{- if .Values.airflow.cloneDagFilesFromGit.enabled }}
            - name: git-cloned-dag-files
              mountPath: /opt/bitnami/airflow/dags/git
              {{- if .Values.airflow.cloneDagFilesFromGit.path }}
              subPath: {{ .Values.airflow.cloneDagFilesFromGit.path }}
              {{- end }}
            {{- end }}
            {{- if .Values.airflow.clonePluginsFromGit.enabled }}
            - name: git-cloned-plugins
              mountPath: /opt/bitnami/airflow/plugins
              {{- if .Values.airflow.clonePluginsFromGit.path }}
              subPath: {{ .Values.airflow.clonePluginsFromGit.path }}
              {{- end }}
            {{- end }}
            {{- if .Values.airflow.configurationConfigMap }}
            - name: custom-configuration-file
              mountPath: /opt/bitnami/airflow/airflow.cfg
              subPath: airflow.cfg
            {{- end }}
            {{- if .Values.airflow.webserverConfigMap }}
            - name: custom-webserver-configuration-file
              mountPath: /opt/bitnami/airflow/webserver_config.py
              subPath: webserver_config.py
            {{- end }}
            {{- if .Values.ldap.tls.enabled }}
            - name: airflow-ldap-ca-certificate
              mountPath: /opt/bitnami/airflow/conf/certs/
              readOnly: true
            {{- end }}
          {{- if .Values.airflow.web.resources }}
          resources: {{- toYaml .Values.airflow.web.resources | nindent 12 }}
          {{- end }}
      volumes:
        {{- if .Files.Glob "files/dags/*.py" }}
        - name: local-dag-files
          configMap:
            name: {{ template "airflow.fullname" . }}-dag-files
        {{- end }}
        {{- if .Values.airflow.dagsConfigMap }}
        - name: external-dag-files
          configMap:
            name: {{ .Values.airflow.dagsConfigMap }}
        {{- end }}
        {{- if .Values.airflow.cloneDagFilesFromGit.enabled }}
        - name: git-cloned-dag-files
          emptyDir: {}
        {{- end }}
        {{- if .Values.airflow.clonePluginsFromGit.enabled }}
        - name: git-cloned-plugins
          emptyDir: {}
        {{- end }}
        {{- if .Values.airflow.configurationConfigMap }}
        - name: custom-configuration-file
          configMap:
            name: {{ .Values.airflow.configurationConfigMap }}
        {{- end }}
        {{- if .Values.airflow.webserverConfigMap }}
        - name: custom-webserver-configuration-file
          configMap:
            name: {{ .Values.airflow.webserverConfigMap }}
        {{- end }}
        {{- if .Values.ldap.tls.enabled }}
        - name: airflow-ldap-ca-certificate
          secret:
            secretName: {{ required "A secret containing the LDAP CA certificate. It is required when SSL in enabled" .Values.ldap.tls.CAcertificateSecret }}
            defaultMode: 256
        {{- end }}
